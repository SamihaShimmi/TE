<?xml version='1.0' encoding='utf-8'?>
<function>
  <type>
    <specifier>public</specifier>
    <name>void</name>
  </type>
  <name>removeAgedItems</name>
  <parameter_list>(<parameter>
      <decl>
        <type>
          <name>long</name>
        </type>
        <name>latest</name>
      </decl>
    </parameter>, <parameter>
      <decl>
        <type>
          <name>boolean</name>
        </type>
        <name>notify</name>
      </decl>
    </parameter>)</parameter_list>
  <block>{<block_content>
      <if_stmt>
        <if>if <condition>(<expr>
              <call>
                <name>
                  <name>this</name>
                  <operator>.</operator>
                  <name>data</name>
                  <operator>.</operator>
                  <name>isEmpty</name>
                </name>
                <argument_list>()</argument_list>
              </call>
            </expr>)</condition>
          <block>{<block_content>
              <return>return;</return>
              <comment type="line">// nothing to do</comment>
            </block_content>}</block>
        </if>
      </if_stmt>
      <comment type="line">// find the serial index of the period specified by 'latest'</comment>
      <decl_stmt>
        <decl>
          <type>
            <name>long</name>
          </type>
          <name>index</name>
          <init>= <expr>
              <name>
                <name>Long</name>
                <operator>.</operator>
                <name>MAX_VALUE</name>
              </name>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <try>try <block>{<block_content>
            <decl_stmt>
              <decl>
                <type>
                  <name>Method</name>
                </type>
                <name>m</name>
                <init>= <expr>
                    <call>
                      <name>
                        <name>RegularTimePeriod</name>
                        <operator>.</operator>
                        <name>
                          <name>class</name>
                          <operator>.</operator>
                          <name>getDeclaredMethod</name>
                        </name>
                      </name>
                      <argument_list>(
                    <argument>
                          <expr>
                            <literal type="string">"createInstance"</literal>
                          </expr>
                        </argument>, <argument>
                          <expr>
                            <operator>new</operator>
                            <name>
                              <name>Class</name>
                              <index>[]</index>
                            </name>
                            <block>{<expr>
                                <name>
                                  <name>Class</name>
                                  <operator>.</operator>
                                  <name>class</name>
                                </name>
                              </expr>, <expr>
                                <name>
                                  <name>Date</name>
                                  <operator>.</operator>
                                  <name>class</name>
                                </name>
                              </expr>,
                    <expr>
                                <name>
                                  <name>TimeZone</name>
                                  <operator>.</operator>
                                  <name>class</name>
                                </name>
                              </expr>, <expr>
                                <name>
                                  <name>Locale</name>
                                  <operator>.</operator>
                                  <name>class</name>
                                </name>
                              </expr>}</block>
                          </expr>
                        </argument>)</argument_list>
                    </call>
                  </expr>
                </init>
              </decl>;</decl_stmt>
            <decl_stmt>
              <decl>
                <type>
                  <name>RegularTimePeriod</name>
                </type>
                <name>newest</name>
                <init>= <expr>
                    <operator>(</operator>
                    <name>RegularTimePeriod</name>
                    <operator>)</operator>
                    <call>
                      <name>
                        <name>m</name>
                        <operator>.</operator>
                        <name>invoke</name>
                      </name>
                      <argument_list>(
                    <argument>
                          <expr>
                            <name>
                              <name>this</name>
                              <operator>.</operator>
                              <name>timePeriodClass</name>
                            </name>
                          </expr>
                        </argument>, <argument>
                          <expr>
                            <operator>new</operator>
                            <name>
                              <name>Object</name>
                              <index>[]</index>
                            </name>
                            <block>{<expr>
                                <name>
                                  <name>this</name>
                                  <operator>.</operator>
                                  <name>timePeriodClass</name>
                                </name>
                              </expr>,
                            <expr>
                                <operator>new</operator>
                                <call>
                                  <name>Date</name>
                                  <argument_list>(<argument>
                                      <expr>
                                        <name>latest</name>
                                      </expr>
                                    </argument>)</argument_list>
                                </call>
                              </expr>, <expr>
                                <call>
                                  <name>
                                    <name>TimeZone</name>
                                    <operator>.</operator>
                                    <name>getDefault</name>
                                  </name>
                                  <argument_list>()</argument_list>
                                </call>
                              </expr>, <expr>
                                <call>
                                  <name>
                                    <name>Locale</name>
                                    <operator>.</operator>
                                    <name>getDefault</name>
                                  </name>
                                  <argument_list>()</argument_list>
                                </call>
                              </expr>}</block>
                          </expr>
                        </argument>)</argument_list>
                    </call>
                  </expr>
                </init>
              </decl>;</decl_stmt>
            <expr_stmt>
              <expr>
                <name>index</name>
                <operator>=</operator>
                <call>
                  <name>
                    <name>newest</name>
                    <operator>.</operator>
                    <name>getSerialIndex</name>
                  </name>
                  <argument_list>()</argument_list>
                </call>
              </expr>;</expr_stmt>
          </block_content>}</block>
        <catch>catch <parameter_list>(<parameter>
              <decl>
                <type>
                  <name>NoSuchMethodException</name>
                </type>
                <name>e</name>
              </decl>
            </parameter>)</parameter_list>
          <block>{<block_content>
              <throw>throw <expr>
                  <operator>new</operator>
                  <call>
                    <name>RuntimeException</name>
                    <argument_list>(<argument>
                        <expr>
                          <name>e</name>
                        </expr>
                      </argument>)</argument_list>
                  </call>
                </expr>;</throw>
            </block_content>}</block>
        </catch>
        <catch>catch <parameter_list>(<parameter>
              <decl>
                <type>
                  <name>IllegalAccessException</name>
                </type>
                <name>e</name>
              </decl>
            </parameter>)</parameter_list>
          <block>{<block_content>
              <throw>throw <expr>
                  <operator>new</operator>
                  <call>
                    <name>RuntimeException</name>
                    <argument_list>(<argument>
                        <expr>
                          <name>e</name>
                        </expr>
                      </argument>)</argument_list>
                  </call>
                </expr>;</throw>
            </block_content>}</block>
        </catch>
        <catch>catch <parameter_list>(<parameter>
              <decl>
                <type>
                  <name>InvocationTargetException</name>
                </type>
                <name>e</name>
              </decl>
            </parameter>)</parameter_list>
          <block>{<block_content>
              <throw>throw <expr>
                  <operator>new</operator>
                  <call>
                    <name>RuntimeException</name>
                    <argument_list>(<argument>
                        <expr>
                          <name>e</name>
                        </expr>
                      </argument>)</argument_list>
                  </call>
                </expr>;</throw>
            </block_content>}</block>
        </catch>
      </try>
      <comment type="line">// check if there are any values earlier than specified by the history</comment>
      <comment type="line">// count...</comment>
      <decl_stmt>
        <decl>
          <type>
            <name>boolean</name>
          </type>
          <name>removed</name>
          <init>= <expr>
              <literal type="boolean">false</literal>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <while>while <condition>(<expr>
            <call>
              <name>getItemCount</name>
              <argument_list>()</argument_list>
            </call>
            <operator>&gt;</operator>
            <literal type="number">0</literal>
            <operator>&amp;&amp;</operator>
            <operator>(</operator>
            <name>index</name>
            <operator>-</operator>
            <call>
              <name>getTimePeriod</name>
              <argument_list>(<argument>
                  <expr>
                    <literal type="number">0</literal>
                  </expr>
                </argument>)</argument_list>
            </call>
            <operator>.</operator>
            <call>
              <name>getSerialIndex</name>
              <argument_list>()</argument_list>
            </call>
            <operator>)</operator>
            <operator>&gt;</operator>
            <name>
              <name>this</name>
              <operator>.</operator>
              <name>maximumItemAge</name>
            </name>
          </expr>)</condition>
        <block>{<block_content>
            <expr_stmt>
              <expr>
                <call>
                  <name>
                    <name>this</name>
                    <operator>.</operator>
                    <name>data</name>
                    <operator>.</operator>
                    <name>remove</name>
                  </name>
                  <argument_list>(<argument>
                      <expr>
                        <literal type="number">0</literal>
                      </expr>
                    </argument>)</argument_list>
                </call>
              </expr>;</expr_stmt>
            <expr_stmt>
              <expr>
                <name>removed</name>
                <operator>=</operator>
                <literal type="boolean">true</literal>
              </expr>;</expr_stmt>
          </block_content>}</block>
      </while>
      <if_stmt>
        <if>if <condition>(<expr>
              <name>removed</name>
            </expr>)</condition>
          <block>{<block_content>
              <expr_stmt>
                <expr>
                  <call>
                    <name>updateMinMaxYByIteration</name>
                    <argument_list>()</argument_list>
                  </call>
                </expr>;</expr_stmt>
              <if_stmt>
                <if>if <condition>(<expr>
                      <name>notify</name>
                    </expr>)</condition>
                  <block>{<block_content>
                      <expr_stmt>
                        <expr>
                          <call>
                            <name>fireSeriesChanged</name>
                            <argument_list>()</argument_list>
                          </call>
                        </expr>;</expr_stmt>
                    </block_content>}</block>
                </if>
              </if_stmt>
            </block_content>}</block>
        </if>
      </if_stmt>
    </block_content>}</block>
</function>
