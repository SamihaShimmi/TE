<?xml version='1.0' encoding='utf-8'?>
<function>
  <type>
    <specifier>public</specifier>
    <specifier>static</specifier>
    <name>Minute</name>
  </type>
  <name>parseMinute</name>
  <parameter_list>(<parameter>
      <decl>
        <type>
          <name>String</name>
        </type>
        <name>s</name>
      </decl>
    </parameter>)</parameter_list>
  <block>{<block_content>
      <decl_stmt>
        <decl>
          <type>
            <name>Minute</name>
          </type>
          <name>result</name>
          <init>= <expr>
              <literal type="null">null</literal>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <expr_stmt>
        <expr>
          <name>s</name>
          <operator>=</operator>
          <call>
            <name>
              <name>s</name>
              <operator>.</operator>
              <name>trim</name>
            </name>
            <argument_list>()</argument_list>
          </call>
        </expr>;</expr_stmt>
      <decl_stmt>
        <decl>
          <type>
            <name>String</name>
          </type>
          <name>daystr</name>
          <init>= <expr>
              <call>
                <name>
                  <name>s</name>
                  <operator>.</operator>
                  <name>substring</name>
                </name>
                <argument_list>(<argument>
                    <expr>
                      <literal type="number">0</literal>
                    </expr>
                  </argument>, <argument>
                    <expr>
                      <call>
                        <name>
                          <name>Math</name>
                          <operator>.</operator>
                          <name>min</name>
                        </name>
                        <argument_list>(<argument>
                            <expr>
                              <literal type="number">10</literal>
                            </expr>
                          </argument>, <argument>
                            <expr>
                              <call>
                                <name>
                                  <name>s</name>
                                  <operator>.</operator>
                                  <name>length</name>
                                </name>
                                <argument_list>()</argument_list>
                              </call>
                            </expr>
                          </argument>)</argument_list>
                      </call>
                    </expr>
                  </argument>)</argument_list>
              </call>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <decl_stmt>
        <decl>
          <type>
            <name>Day</name>
          </type>
          <name>day</name>
          <init>= <expr>
              <call>
                <name>
                  <name>Day</name>
                  <operator>.</operator>
                  <name>parseDay</name>
                </name>
                <argument_list>(<argument>
                    <expr>
                      <name>daystr</name>
                    </expr>
                  </argument>)</argument_list>
              </call>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <if_stmt>
        <if>if <condition>(<expr>
              <name>day</name>
              <operator>!=</operator>
              <literal type="null">null</literal>
            </expr>)</condition>
          <block>{<block_content>
              <decl_stmt>
                <decl>
                  <type>
                    <name>String</name>
                  </type>
                  <name>hmstr</name>
                  <init>= <expr>
                      <call>
                        <name>
                          <name>s</name>
                          <operator>.</operator>
                          <name>substring</name>
                        </name>
                        <argument_list>(
                <argument>
                            <expr>
                              <call>
                                <name>
                                  <name>Math</name>
                                  <operator>.</operator>
                                  <name>min</name>
                                </name>
                                <argument_list>(<argument>
                                    <expr>
                                      <call>
                                        <name>
                                          <name>daystr</name>
                                          <operator>.</operator>
                                          <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                      </call>
                                      <operator>+</operator>
                                      <literal type="number">1</literal>
                                    </expr>
                                  </argument>, <argument>
                                    <expr>
                                      <call>
                                        <name>
                                          <name>s</name>
                                          <operator>.</operator>
                                          <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                      </call>
                                    </expr>
                                  </argument>)</argument_list>
                              </call>
                            </expr>
                          </argument>, <argument>
                            <expr>
                              <call>
                                <name>
                                  <name>s</name>
                                  <operator>.</operator>
                                  <name>length</name>
                                </name>
                                <argument_list>()</argument_list>
                              </call>
                            </expr>
                          </argument>
            )</argument_list>
                      </call>
                    </expr>
                  </init>
                </decl>;</decl_stmt>
              <expr_stmt>
                <expr>
                  <name>hmstr</name>
                  <operator>=</operator>
                  <call>
                    <name>
                      <name>hmstr</name>
                      <operator>.</operator>
                      <name>trim</name>
                    </name>
                    <argument_list>()</argument_list>
                  </call>
                </expr>;</expr_stmt>
              <decl_stmt>
                <decl>
                  <type>
                    <name>String</name>
                  </type>
                  <name>hourstr</name>
                  <init>= <expr>
                      <call>
                        <name>
                          <name>hmstr</name>
                          <operator>.</operator>
                          <name>substring</name>
                        </name>
                        <argument_list>(<argument>
                            <expr>
                              <literal type="number">0</literal>
                            </expr>
                          </argument>, <argument>
                            <expr>
                              <call>
                                <name>
                                  <name>Math</name>
                                  <operator>.</operator>
                                  <name>min</name>
                                </name>
                                <argument_list>(<argument>
                                    <expr>
                                      <literal type="number">2</literal>
                                    </expr>
                                  </argument>, <argument>
                                    <expr>
                                      <call>
                                        <name>
                                          <name>hmstr</name>
                                          <operator>.</operator>
                                          <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                      </call>
                                    </expr>
                                  </argument>)</argument_list>
                              </call>
                            </expr>
                          </argument>)</argument_list>
                      </call>
                    </expr>
                  </init>
                </decl>;</decl_stmt>
              <decl_stmt>
                <decl>
                  <type>
                    <name>int</name>
                  </type>
                  <name>hour</name>
                  <init>= <expr>
                      <call>
                        <name>
                          <name>Integer</name>
                          <operator>.</operator>
                          <name>parseInt</name>
                        </name>
                        <argument_list>(<argument>
                            <expr>
                              <name>hourstr</name>
                            </expr>
                          </argument>)</argument_list>
                      </call>
                    </expr>
                  </init>
                </decl>;</decl_stmt>
              <if_stmt>
                <if>if <condition>(<expr>
                      <operator>(</operator>
                      <name>hour</name>
                      <operator>&gt;=</operator>
                      <literal type="number">0</literal>
                      <operator>)</operator>
                      <operator>&amp;&amp;</operator>
                      <operator>(</operator>
                      <name>hour</name>
                      <operator>&lt;=</operator>
                      <literal type="number">23</literal>
                      <operator>)</operator>
                    </expr>)</condition>
                  <block>{<block_content>
                      <decl_stmt>
                        <decl>
                          <type>
                            <name>String</name>
                          </type>
                          <name>minstr</name>
                          <init>= <expr>
                              <call>
                                <name>
                                  <name>hmstr</name>
                                  <operator>.</operator>
                                  <name>substring</name>
                                </name>
                                <argument_list>(
                    <argument>
                                    <expr>
                                      <call>
                                        <name>
                                          <name>Math</name>
                                          <operator>.</operator>
                                          <name>min</name>
                                        </name>
                                        <argument_list>(<argument>
                                            <expr>
                                              <call>
                                                <name>
                                                  <name>hourstr</name>
                                                  <operator>.</operator>
                                                  <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                              </call>
                                              <operator>+</operator>
                                              <literal type="number">1</literal>
                                            </expr>
                                          </argument>, <argument>
                                            <expr>
                                              <call>
                                                <name>
                                                  <name>hmstr</name>
                                                  <operator>.</operator>
                                                  <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                              </call>
                                            </expr>
                                          </argument>)</argument_list>
                                      </call>
                                    </expr>
                                  </argument>,
                    <argument>
                                    <expr>
                                      <call>
                                        <name>
                                          <name>hmstr</name>
                                          <operator>.</operator>
                                          <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                      </call>
                                    </expr>
                                  </argument>
                )</argument_list>
                              </call>
                            </expr>
                          </init>
                        </decl>;</decl_stmt>
                      <decl_stmt>
                        <decl>
                          <type>
                            <name>int</name>
                          </type>
                          <name>minute</name>
                          <init>= <expr>
                              <call>
                                <name>
                                  <name>Integer</name>
                                  <operator>.</operator>
                                  <name>parseInt</name>
                                </name>
                                <argument_list>(<argument>
                                    <expr>
                                      <name>minstr</name>
                                    </expr>
                                  </argument>)</argument_list>
                              </call>
                            </expr>
                          </init>
                        </decl>;</decl_stmt>
                      <if_stmt>
                        <if>if <condition>(<expr>
                              <operator>(</operator>
                              <name>minute</name>
                              <operator>&gt;=</operator>
                              <literal type="number">0</literal>
                              <operator>)</operator>
                              <operator>&amp;&amp;</operator>
                              <operator>(</operator>
                              <name>minute</name>
                              <operator>&lt;=</operator>
                              <literal type="number">59</literal>
                              <operator>)</operator>
                            </expr>)</condition>
                          <block>{<block_content>
                              <expr_stmt>
                                <expr>
                                  <name>result</name>
                                  <operator>=</operator>
                                  <operator>new</operator>
                                  <call>
                                    <name>Minute</name>
                                    <argument_list>(<argument>
                                        <expr>
                                          <name>minute</name>
                                        </expr>
                                      </argument>, <argument>
                                        <expr>
                                          <operator>new</operator>
                                          <call>
                                            <name>Hour</name>
                                            <argument_list>(<argument>
                                                <expr>
                                                  <name>hour</name>
                                                </expr>
                                              </argument>, <argument>
                                                <expr>
                                                  <name>day</name>
                                                </expr>
                                              </argument>)</argument_list>
                                          </call>
                                        </expr>
                                      </argument>)</argument_list>
                                  </call>
                                </expr>;</expr_stmt>
                            </block_content>}</block>
                        </if>
                      </if_stmt>
                    </block_content>}</block>
                </if>
              </if_stmt>
            </block_content>}</block>
        </if>
      </if_stmt>
      <return>return <expr>
          <name>result</name>
        </expr>;</return>
    </block_content>}</block>
</function>
