<?xml version='1.0' encoding='utf-8'?>
<function>
  <annotation>@<name>Override</name>
  </annotation>
  <type>
    <specifier>public</specifier>
    <name>Range</name>
  </type>
  <name>getDomainBounds</name>
  <parameter_list>(<parameter>
      <decl>
        <type>
          <name>boolean</name>
        </type>
        <name>includeInterval</name>
      </decl>
    </parameter>)</parameter_list>
  <block>{<block_content>
      <decl_stmt>
        <decl>
          <type>
            <name>List</name>
          </type>
          <name>keys</name>
          <init>= <expr>
              <call>
                <name>
                  <name>this</name>
                  <operator>.</operator>
                  <name>values</name>
                  <operator>.</operator>
                  <name>getRowKeys</name>
                </name>
                <argument_list>()</argument_list>
              </call>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <if_stmt>
        <if>if <condition>(<expr>
              <call>
                <name>
                  <name>keys</name>
                  <operator>.</operator>
                  <name>isEmpty</name>
                </name>
                <argument_list>()</argument_list>
              </call>
            </expr>)</condition>
          <block>{<block_content>
              <return>return <expr>
                  <literal type="null">null</literal>
                </expr>;</return>
            </block_content>}</block>
        </if>
      </if_stmt>
      <decl_stmt>
        <decl>
          <type>
            <name>TimePeriod</name>
          </type>
          <name>first</name>
          <init>= <expr>
              <operator>(</operator>
              <name>TimePeriod</name>
              <operator>)</operator>
              <call>
                <name>
                  <name>keys</name>
                  <operator>.</operator>
                  <name>get</name>
                </name>
                <argument_list>(<argument>
                    <expr>
                      <literal type="number">0</literal>
                    </expr>
                  </argument>)</argument_list>
              </call>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <decl_stmt>
        <decl>
          <type>
            <name>TimePeriod</name>
          </type>
          <name>last</name>
          <init>= <expr>
              <operator>(</operator>
              <name>TimePeriod</name>
              <operator>)</operator>
              <call>
                <name>
                  <name>keys</name>
                  <operator>.</operator>
                  <name>get</name>
                </name>
                <argument_list>(<argument>
                    <expr>
                      <call>
                        <name>
                          <name>keys</name>
                          <operator>.</operator>
                          <name>size</name>
                        </name>
                        <argument_list>()</argument_list>
                      </call>
                      <operator>-</operator>
                      <literal type="number">1</literal>
                    </expr>
                  </argument>)</argument_list>
              </call>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <if_stmt>
        <if>if <condition>(<expr>
              <operator>!</operator>
              <name>includeInterval</name>
              <operator>||</operator>
              <name>
                <name>this</name>
                <operator>.</operator>
                <name>domainIsPointsInTime</name>
              </name>
            </expr>)</condition>
          <block>{<block_content>
              <return>return <expr>
                  <operator>new</operator>
                  <call>
                    <name>Range</name>
                    <argument_list>(<argument>
                        <expr>
                          <call>
                            <name>getXValue</name>
                            <argument_list>(<argument>
                                <expr>
                                  <name>first</name>
                                </expr>
                              </argument>)</argument_list>
                          </call>
                        </expr>
                      </argument>, <argument>
                        <expr>
                          <call>
                            <name>getXValue</name>
                            <argument_list>(<argument>
                                <expr>
                                  <name>last</name>
                                </expr>
                              </argument>)</argument_list>
                          </call>
                        </expr>
                      </argument>)</argument_list>
                  </call>
                </expr>;</return>
            </block_content>}</block>
        </if>
        <else>else <block>{<block_content>
              <return>return <expr>
                  <operator>new</operator>
                  <call>
                    <name>Range</name>
                    <argument_list>(<argument>
                        <expr>
                          <call>
                            <name>
                              <name>first</name>
                              <operator>.</operator>
                              <name>getStart</name>
                            </name>
                            <argument_list>()</argument_list>
                          </call>
                          <operator>.</operator>
                          <call>
                            <name>getTime</name>
                            <argument_list>()</argument_list>
                          </call>
                        </expr>
                      </argument>,
                    <argument>
                        <expr>
                          <call>
                            <name>
                              <name>last</name>
                              <operator>.</operator>
                              <name>getEnd</name>
                            </name>
                            <argument_list>()</argument_list>
                          </call>
                          <operator>.</operator>
                          <call>
                            <name>getTime</name>
                            <argument_list>()</argument_list>
                          </call>
                        </expr>
                      </argument>)</argument_list>
                  </call>
                </expr>;</return>
            </block_content>}</block>
        </else>
      </if_stmt>
    </block_content>}</block>
</function>
