<?xml version='1.0' encoding='utf-8'?>
<function>
  <type>
    <specifier>public</specifier>
    <name>TimePeriodValues</name>
  </type>
  <name>createCopy</name>
  <parameter_list>(<parameter>
      <decl>
        <type>
          <name>int</name>
        </type>
        <name>start</name>
      </decl>
    </parameter>, <parameter>
      <decl>
        <type>
          <name>int</name>
        </type>
        <name>end</name>
      </decl>
    </parameter>)</parameter_list>
  <throws>throws <argument>
      <expr>
        <name>CloneNotSupportedException</name>
      </expr>
    </argument>
  </throws>
  <block>{<block_content>
      <decl_stmt>
        <decl>
          <type>
            <name>TimePeriodValues</name>
          </type>
          <name>copy</name>
          <init>= <expr>
              <operator>(</operator>
              <name>TimePeriodValues</name>
              <operator>)</operator>
              <call>
                <name>
                  <name>super</name>
                  <operator>.</operator>
                  <name>clone</name>
                </name>
                <argument_list>()</argument_list>
              </call>
            </expr>
          </init>
        </decl>;</decl_stmt>
      <expr_stmt>
        <expr>
          <name>
            <name>copy</name>
            <operator>.</operator>
            <name>data</name>
          </name>
          <operator>=</operator>
          <operator>new</operator>
          <call>
            <name>
              <name>ArrayList</name>
              <argument_list type="generic">&lt;&gt;</argument_list>
            </name>
            <argument_list>()</argument_list>
          </call>
        </expr>;</expr_stmt>
      <if_stmt>
        <if>if <condition>(<expr>
              <call>
                <name>
                  <name>this</name>
                  <operator>.</operator>
                  <name>data</name>
                  <operator>.</operator>
                  <name>size</name>
                </name>
                <argument_list>()</argument_list>
              </call>
              <operator>&gt;</operator>
              <literal type="number">0</literal>
            </expr>)</condition>
          <block>{<block_content>
              <for>for <control>(<init>
                    <decl>
                      <type>
                        <name>int</name>
                      </type>
                      <name>index</name>
                      <init>= <expr>
                          <name>start</name>
                        </expr>
                      </init>
                    </decl>;</init>
                  <condition>
                    <expr>
                      <name>index</name>
                      <operator>&lt;=</operator>
                      <name>end</name>
                    </expr>;</condition>
                  <incr>
                    <expr>
                      <name>index</name>
                      <operator>++</operator>
                    </expr>
                  </incr>)</control>
                <block>{<block_content>
                    <decl_stmt>
                      <decl>
                        <type>
                          <name>TimePeriodValue</name>
                        </type>
                        <name>item</name>
                        <init>= <expr>
                            <call>
                              <name>
                                <name>this</name>
                                <operator>.</operator>
                                <name>data</name>
                                <operator>.</operator>
                                <name>get</name>
                              </name>
                              <argument_list>(<argument>
                                  <expr>
                                    <name>index</name>
                                  </expr>
                                </argument>)</argument_list>
                            </call>
                          </expr>
                        </init>
                      </decl>;</decl_stmt>
                    <decl_stmt>
                      <decl>
                        <type>
                          <name>TimePeriodValue</name>
                        </type>
                        <name>clone</name>
                        <init>= <expr>
                            <operator>(</operator>
                            <name>TimePeriodValue</name>
                            <operator>)</operator>
                            <call>
                              <name>
                                <name>item</name>
                                <operator>.</operator>
                                <name>clone</name>
                              </name>
                              <argument_list>()</argument_list>
                            </call>
                          </expr>
                        </init>
                      </decl>;</decl_stmt>
                    <try>try <block>{<block_content>
                          <expr_stmt>
                            <expr>
                              <call>
                                <name>
                                  <name>copy</name>
                                  <operator>.</operator>
                                  <name>add</name>
                                </name>
                                <argument_list>(<argument>
                                    <expr>
                                      <name>clone</name>
                                    </expr>
                                  </argument>)</argument_list>
                              </call>
                            </expr>;</expr_stmt>
                        </block_content>}</block>
                      <catch>catch <parameter_list>(<parameter>
                            <decl>
                              <type>
                                <name>SeriesException</name>
                              </type>
                              <name>e</name>
                            </decl>
                          </parameter>)</parameter_list>
                        <block>{<block_content>
                            <expr_stmt>
                              <expr>
                                <call>
                                  <name>
                                    <name>System</name>
                                    <operator>.</operator>
                                    <name>err</name>
                                    <operator>.</operator>
                                    <name>println</name>
                                  </name>
                                  <argument_list>(<argument>
                                      <expr>
                                        <literal type="string">"Failed to add cloned item."</literal>
                                      </expr>
                                    </argument>)</argument_list>
                                </call>
                              </expr>;</expr_stmt>
                          </block_content>}</block>
                      </catch>
                    </try>
                  </block_content>}</block>
              </for>
            </block_content>}</block>
        </if>
      </if_stmt>
      <return>return <expr>
          <name>copy</name>
        </expr>;</return>
    </block_content>}</block>
</function>
